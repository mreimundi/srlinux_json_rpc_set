{
    "jsonrpc": "2.0",
    "id": 0,
    "method": "set",
    "params": {
            "commands": [
                    {
                            "action": "update",
                            "path": "/network-instance",
                            "value": [ "
                            
{% for interface in interfaces %}
    interface {{ interface.name }} {
        admin-state enable
        subinterface {{ interface.index }} {
            admin-state enable
            ipv4 {
                address {{ interface.ipv4_address_prefix }} {
                }
            }
        }
    }
{% endfor %}

  routing-policy {
        prefix-set  {{ routing_policy.prefix_set_name }} {
            prefix {{ routing_policy.prefix_set_ip }} mask-length-range 8..32 {
            }
        }
        policy {{ routing_policy.policy_name }} {
                default-action {
                    reject {
                    }
                }
                statement 10 {
                    match {
                        prefix-set {{ routing_policy.prefix_set_name }}
                    }
                    action {
                        accept {
                        }
                    }
                }
        }
  }

  network-instance default {
    type default
    admin-state enable
{% for interface in interfaces %}
    interface {{ interface.name }}.{{ interface.index }} {
    }
{% endfor %}

}

network-instance default {
        protocols {
            bgp {
                autonomous-system {{ bgp.local_as }}
                router-id {{ bgp.router_id }}
                ebgp-default-policy {
                    import-reject-all false
                    export-reject-all true
                }
                group {{ bgp.peer_group }} {
                    admin-state enable
                }
                ipv4-unicast {
                    multipath {
                        max-paths-level-1 64
                        max-paths-level-2 64
                    }
                }
{% for bgp_neighbor in bgp_neighbors %}
                neighbor {{ bgp_neighbor.neighbor_ip }} {
                    admin-state enable
                    export-policy export-loopbacks
                    peer-as {{ bgp_neighbor.remote_as }}
                    peer-group {{ bgp_neighbor.peer_group }}
                    failure-detection {
                        enable-bfd true
                        fast-failover true
                    }
                }
 {% endfor %}
            }
        }
}

        "

                            ]
                    }
            ]
    }
}
